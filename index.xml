<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Samuel Rodrigues</title><link>https://obito.fr/</link><description>Recent content on Samuel Rodrigues</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 26 Dec 2022 19:05:00 +0100</lastBuildDate><atom:link href="https://obito.fr/index.xml" rel="self" type="application/rss+xml"/><item><title>Use UUID in SQLite database with Rust + Diesel.rs</title><link>https://obito.fr/posts/2022/12/use-uuid-in-sqlite-database-with-rust-diesel.rs/</link><pubDate>Mon, 26 Dec 2022 19:05:00 +0100</pubDate><guid>https://obito.fr/posts/2022/12/use-uuid-in-sqlite-database-with-rust-diesel.rs/</guid><description>Recently in one of my project I ran into a problem where I wanted to use UUIDs in my database but as it turns out SQLite only support 5 data types : TEXT, INTEGER, REAL, NUMERIC and BLOB. This in itself is not really a concern, as I use an ORM (Object-relational mapping) called diesel.rs in my project.
The issue that I encountered is in the ORM itself. The crate diesel.</description></item></channel></rss>